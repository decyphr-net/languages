name: Build, test and deploy to prod

on:
  push:
    branches:
      - main

env:
  SQLX_OFFLINE:  true

jobs:
  build:
    runs-on: ubuntu-latest
  
    steps:
      - name: Checkout code
        uses: actions.checkout@v2

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
  
      - name: Build and test code
        run:
          cargo build --verbose
          cargo test --verbose
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
  
      - name: Build and push Docker images
        uses: docker/bake-action@b2.3.0
        with:
          push: true
    
    - deploy:
      needs: build
      runs-on: ubuntu-latest

      steps:
        - name: Checkout code
          uses: actions/checkout@v2
        
        - name: Log in to Dockerhub
          uses: docker/login-action@v2
          with:
            username: ${{ secrets.DOCKER_USERNAME }}
            password: ${{ secrets.DOCKER_PASSWORD }}
        
        - name: "Install sshpass"
          run: sudo apt-get install sshpass"
        
        - name: Copy docker-compose.yml to droplet
          run: sshpass -v -p ${{ secrets.DOCKER_PASSWORD }} scp -o StrictHostKeyChecking=no docker-compose.yml root@${{ vars.DROPET_IP }}
        
        - name: Deploy
          users: appleboy/ssh-action@master
          with:
            host: ${{ vars.DROPLET_IP }}
            username: root
            password: ${{ secrets.DROPLET_PASSWORD }}
            script:
              cd ~
              export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
              docker-compose down
              docker-compose pull
              docker-compose up -d
